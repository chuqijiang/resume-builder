{"version":3,"file":"koa.js","sources":["../../../../src/integrations/tracing/koa.ts"],"sourcesContent":["import { isWrapped } from '@opentelemetry/core';\nimport { KoaInstrumentation } from '@opentelemetry/instrumentation-koa';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport {\n  captureException,\n  defineIntegration,\n  getDefaultIsolationScope,\n  getIsolationScope,\n  isEnabled,\n  spanToJSON,\n} from '@sentry/core';\nimport { addOpenTelemetryInstrumentation } from '@sentry/opentelemetry';\nimport type { IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../debug-build';\n\nconst _koaIntegration = (() => {\n  return {\n    name: 'Koa',\n    setupOnce() {\n      addOpenTelemetryInstrumentation(\n        new KoaInstrumentation({\n          requestHook(span, info) {\n            if (getIsolationScope() === getDefaultIsolationScope()) {\n              DEBUG_BUILD &&\n                logger.warn('Isolation scope is default isolation scope - skipping setting transactionName');\n              return;\n            }\n            const attributes = spanToJSON(span).data;\n            const route = attributes && attributes[SEMATTRS_HTTP_ROUTE];\n            const method = info.context.request.method.toUpperCase() || 'GET';\n            if (route) {\n              getIsolationScope().setTransactionName(`${method} ${route}`);\n            }\n          },\n        }),\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const koaIntegration = defineIntegration(_koaIntegration);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const setupKoaErrorHandler = (app: { use: (arg0: (ctx: any, next: any) => Promise<void>) => void }): void => {\n  app.use(async (ctx, next) => {\n    try {\n      await next();\n    } catch (error) {\n      captureException(error);\n    }\n  });\n\n  if (!isWrapped(app.use) && isEnabled()) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Koa is not instrumented. This is likely because you required/imported koa before calling `Sentry.init()`.',\n      );\n    });\n  }\n};\n"],"names":["addOpenTelemetryInstrumentation","KoaInstrumentation","getIsolationScope","getDefaultIsolationScope","DEBUG_BUILD","logger","spanToJSON","SEMATTRS_HTTP_ROUTE","defineIntegration","captureException","isWrapped","isEnabled","consoleSandbox"],"mappings":";;;;;;;;;;AAgBA,MAAM,eAAgB,IAAG,MAAM;AAC/B,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,KAAK;AACf,IAAI,SAAS,GAAG;AAChB,MAAMA,6CAA+B;AACrC,QAAQ,IAAIC,qCAAkB,CAAC;AAC/B,UAAU,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE;AAClC,YAAY,IAAIC,sBAAiB,OAAOC,6BAAwB,EAAE,EAAE;AACpE,cAAcC,sBAAY;AAC1B,gBAAgBC,YAAM,CAAC,IAAI,CAAC,+EAA+E,CAAC,CAAA;AAC5G,cAAc,OAAM;AACpB,aAAY;AACZ,YAAY,MAAM,aAAaC,eAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAA;AACpD,YAAY,MAAM,QAAQ,UAAA,IAAc,UAAU,CAACC,uCAAmB,CAAC,CAAA;AACvE,YAAY,MAAM,MAAA,GAAS,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAC,IAAK,KAAK,CAAA;AAC7E,YAAY,IAAI,KAAK,EAAE;AACvB,cAAcL,sBAAiB,EAAE,CAAC,kBAAkB,CAAC,CAAC,EAAA,MAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,aAAA;AACA,WAAA;AACA,SAAA,CAAA;AACA,OAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA,CAAA,CAAA,EAAA;AACA;AACA,MAAA,cAAA,GAAAM,sBAAA,CAAA,eAAA,EAAA;AACA;AACA;AACA,MAAA,oBAAA,GAAA,CAAA,GAAA,KAAA;AACA,EAAA,GAAA,CAAA,GAAA,CAAA,OAAA,GAAA,EAAA,IAAA,KAAA;AACA,IAAA,IAAA;AACA,MAAA,MAAA,IAAA,EAAA,CAAA;AACA,KAAA,CAAA,OAAA,KAAA,EAAA;AACA,MAAAC,qBAAA,CAAA,KAAA,CAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA,CAAAC,gBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAAC,cAAA,EAAA,EAAA;AACA,IAAAC,oBAAA,CAAA,MAAA;AACA;AACA,MAAA,OAAA,CAAA,IAAA;AACA,QAAA,oHAAA;AACA,OAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;;;;;"}