import { ExecutionContext } from "@nestjs/common";
import { AddRequestDataToEventOptions, Scope } from "@sentry/node";
import { Extras, Primitive, SeverityLevel } from "@sentry/types";
export type IRavenScopeTransformerFunction = (scope: Scope, context: ExecutionContext) => void;
export type IRavenFilterFunction<T> = (exception: T) => boolean;
export interface IRavenInterceptorOptionsFilter<T> {
    type: T;
    filter?: IRavenFilterFunction<T>;
}
export type IRavenInterceptorOptions<T = any> = {
    filters?: IRavenInterceptorOptionsFilter<T>[];
    transformers?: IRavenScopeTransformerFunction[];
    tags?: {
        [key: string]: Primitive;
    };
    extra?: Extras;
    fingerprint?: string[];
    level?: SeverityLevel;
    request?: boolean;
    serverName?: boolean;
    transaction?: boolean | "path" | "methodPath" | "handler";
    user?: boolean | string[];
    version?: boolean;
} & AddRequestDataToEventOptions;
